-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from parser.y
-----------------------------------------------------------------------------

state 8 contains 13 shift/reduce conflicts.
state 26 contains 13 shift/reduce conflicts.
state 27 contains 13 shift/reduce conflicts.
state 28 contains 13 shift/reduce conflicts.
state 29 contains 13 shift/reduce conflicts.
state 30 contains 13 shift/reduce conflicts.
state 31 contains 13 shift/reduce conflicts.
state 32 contains 13 shift/reduce conflicts.
state 33 contains 9 shift/reduce conflicts.
state 34 contains 9 shift/reduce conflicts.
state 35 contains 9 shift/reduce conflicts.
state 36 contains 9 shift/reduce conflicts.
state 37 contains 13 shift/reduce conflicts.
state 38 contains 13 shift/reduce conflicts.
state 42 contains 9 shift/reduce conflicts.

terminal identifier is unused
terminal varDec is unused
terminal funDec is unused
terminal '=' is unused
terminal case is unused
terminal of is unused
terminal end is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Expr                              (0)
	Expr -> let Expr in Expr                           (1)
	Expr -> Expr '+' Expr                              (2)
	Expr -> Expr '-' Expr                              (3)
	Expr -> Expr '*' Expr                              (4)
	Expr -> Expr '/' Expr                              (5)
	Expr -> Expr '%' Expr                              (6)
	Expr -> Expr '<' Expr                              (7)
	Expr -> Expr '>' Expr                              (8)
	Expr -> Expr "==" Expr                             (9)
	Expr -> Expr "!=" Expr                             (10)
	Expr -> Expr "<=" Expr                             (11)
	Expr -> Expr ">=" Expr                             (12)
	Expr -> Expr "&&" Expr                             (13)
	Expr -> Expr "||" Expr                             (14)
	Expr -> '!' Expr                                   (15)
	Expr -> '(' '-' Expr ')'                           (16)
	Expr -> '(' Expr ')'                               (17)
	Expr -> int                                        (18)
	Expr -> bool                                       (19)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { TInt $$ }
	bool           { TBool $$ }
	identifier     { TIdentifier $$ }
	varDec         { TVarDec }
	funDec         { TFunDec }
	'('            { TSym '(' }
	')'            { TSym ')' }
	'='            { TSym '=' }
	'<'            { TSym '<' }
	'>'            { TSym '>' }
	'+'            { TSym '+' }
	'-'            { TSym '-' }
	'*'            { TSym '*' }
	'/'            { TSym '/' }
	'%'            { TSym '%' }
	'!'            { TSym '!' }
	let            { TLet }
	in             { TIn }
	case           { TCase }
	of             { TOf }
	end            { TEnd }
	"=="           { TDSym "==" }
	"!="           { TDSym "!=" }
	"<="           { TDSym "<=" }
	">="           { TDSym ">=" }
	"&&"           { TDSym "&&" }
	"||"           { TDSym "||" }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Expr            rules 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . Expr                             (rule 0)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 3

State 1

	Expr -> . let Expr in Expr                          (rule 1)

	let            shift, and enter state 2


State 2

	Expr -> let . Expr in Expr                          (rule 1)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 24

State 3

	%start_parser -> Expr .                             (rule 0)
	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	'<'            shift, and enter state 11
	'>'            shift, and enter state 12
	'+'            shift, and enter state 13
	'-'            shift, and enter state 14
	'*'            shift, and enter state 15
	'/'            shift, and enter state 16
	'%'            shift, and enter state 17
	"=="           shift, and enter state 18
	"!="           shift, and enter state 19
	"<="           shift, and enter state 20
	">="           shift, and enter state 21
	"&&"           shift, and enter state 22
	"||"           shift, and enter state 23
	%eof           accept


State 4

	Expr -> int .                                       (rule 18)

	')'            reduce using rule 18
	'<'            reduce using rule 18
	'>'            reduce using rule 18
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            reduce using rule 18
	'/'            reduce using rule 18
	'%'            reduce using rule 18
	in             reduce using rule 18
	"=="           reduce using rule 18
	"!="           reduce using rule 18
	"<="           reduce using rule 18
	">="           reduce using rule 18
	"&&"           reduce using rule 18
	"||"           reduce using rule 18
	%eof           reduce using rule 18


State 5

	Expr -> bool .                                      (rule 19)

	')'            reduce using rule 19
	'<'            reduce using rule 19
	'>'            reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	'%'            reduce using rule 19
	in             reduce using rule 19
	"=="           reduce using rule 19
	"!="           reduce using rule 19
	"<="           reduce using rule 19
	">="           reduce using rule 19
	"&&"           reduce using rule 19
	"||"           reduce using rule 19
	%eof           reduce using rule 19


State 6

	Expr -> '(' . '-' Expr ')'                          (rule 16)
	Expr -> '(' . Expr ')'                              (rule 17)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'-'            shift, and enter state 10
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 9

State 7

	Expr -> '!' . Expr                                  (rule 15)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 8

State 8

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> '!' Expr .                                  (rule 15)

	')'            reduce using rule 15
	'<'            shift, and enter state 11
			(reduce using rule 15)

	'>'            shift, and enter state 12
			(reduce using rule 15)

	'+'            shift, and enter state 13
			(reduce using rule 15)

	'-'            shift, and enter state 14
			(reduce using rule 15)

	'*'            shift, and enter state 15
			(reduce using rule 15)

	'/'            shift, and enter state 16
			(reduce using rule 15)

	'%'            shift, and enter state 17
			(reduce using rule 15)

	in             reduce using rule 15
	"=="           shift, and enter state 18
			(reduce using rule 15)

	"!="           shift, and enter state 19
			(reduce using rule 15)

	"<="           shift, and enter state 20
			(reduce using rule 15)

	">="           shift, and enter state 21
			(reduce using rule 15)

	"&&"           shift, and enter state 22
			(reduce using rule 15)

	"||"           shift, and enter state 23
			(reduce using rule 15)

	%eof           reduce using rule 15


State 9

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> '(' Expr . ')'                              (rule 17)

	')'            shift, and enter state 40
	'<'            shift, and enter state 11
	'>'            shift, and enter state 12
	'+'            shift, and enter state 13
	'-'            shift, and enter state 14
	'*'            shift, and enter state 15
	'/'            shift, and enter state 16
	'%'            shift, and enter state 17
	"=="           shift, and enter state 18
	"!="           shift, and enter state 19
	"<="           shift, and enter state 20
	">="           shift, and enter state 21
	"&&"           shift, and enter state 22
	"||"           shift, and enter state 23


State 10

	Expr -> '(' '-' . Expr ')'                          (rule 16)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 39

State 11

	Expr -> Expr '<' . Expr                             (rule 7)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 38

State 12

	Expr -> Expr '>' . Expr                             (rule 8)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 37

State 13

	Expr -> Expr '+' . Expr                             (rule 2)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 36

State 14

	Expr -> Expr '-' . Expr                             (rule 3)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 35

State 15

	Expr -> Expr '*' . Expr                             (rule 4)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 34

State 16

	Expr -> Expr '/' . Expr                             (rule 5)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 33

State 17

	Expr -> Expr '%' . Expr                             (rule 6)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 32

State 18

	Expr -> Expr "==" . Expr                            (rule 9)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 31

State 19

	Expr -> Expr "!=" . Expr                            (rule 10)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 30

State 20

	Expr -> Expr "<=" . Expr                            (rule 11)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 29

State 21

	Expr -> Expr ">=" . Expr                            (rule 12)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 28

State 22

	Expr -> Expr "&&" . Expr                            (rule 13)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 27

State 23

	Expr -> Expr "||" . Expr                            (rule 14)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 26

State 24

	Expr -> let Expr . in Expr                          (rule 1)
	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	'<'            shift, and enter state 11
	'>'            shift, and enter state 12
	'+'            shift, and enter state 13
	'-'            shift, and enter state 14
	'*'            shift, and enter state 15
	'/'            shift, and enter state 16
	'%'            shift, and enter state 17
	in             shift, and enter state 25
	"=="           shift, and enter state 18
	"!="           shift, and enter state 19
	"<="           shift, and enter state 20
	">="           shift, and enter state 21
	"&&"           shift, and enter state 22
	"||"           shift, and enter state 23


State 25

	Expr -> let Expr in . Expr                          (rule 1)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	'('            shift, and enter state 6
	'!'            shift, and enter state 7
	let            shift, and enter state 2

	Expr           goto state 42

State 26

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> Expr "||" Expr .                            (rule 14)

	')'            reduce using rule 14
	'<'            shift, and enter state 11
			(reduce using rule 14)

	'>'            shift, and enter state 12
			(reduce using rule 14)

	'+'            shift, and enter state 13
			(reduce using rule 14)

	'-'            shift, and enter state 14
			(reduce using rule 14)

	'*'            shift, and enter state 15
			(reduce using rule 14)

	'/'            shift, and enter state 16
			(reduce using rule 14)

	'%'            shift, and enter state 17
			(reduce using rule 14)

	in             reduce using rule 14
	"=="           shift, and enter state 18
			(reduce using rule 14)

	"!="           shift, and enter state 19
			(reduce using rule 14)

	"<="           shift, and enter state 20
			(reduce using rule 14)

	">="           shift, and enter state 21
			(reduce using rule 14)

	"&&"           shift, and enter state 22
			(reduce using rule 14)

	"||"           shift, and enter state 23
			(reduce using rule 14)

	%eof           reduce using rule 14


State 27

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr "&&" Expr .                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 13
	'<'            shift, and enter state 11
			(reduce using rule 13)

	'>'            shift, and enter state 12
			(reduce using rule 13)

	'+'            shift, and enter state 13
			(reduce using rule 13)

	'-'            shift, and enter state 14
			(reduce using rule 13)

	'*'            shift, and enter state 15
			(reduce using rule 13)

	'/'            shift, and enter state 16
			(reduce using rule 13)

	'%'            shift, and enter state 17
			(reduce using rule 13)

	in             reduce using rule 13
	"=="           shift, and enter state 18
			(reduce using rule 13)

	"!="           shift, and enter state 19
			(reduce using rule 13)

	"<="           shift, and enter state 20
			(reduce using rule 13)

	">="           shift, and enter state 21
			(reduce using rule 13)

	"&&"           shift, and enter state 22
			(reduce using rule 13)

	"||"           shift, and enter state 23
			(reduce using rule 13)

	%eof           reduce using rule 13


State 28

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr ">=" Expr .                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 12
	'<'            shift, and enter state 11
			(reduce using rule 12)

	'>'            shift, and enter state 12
			(reduce using rule 12)

	'+'            shift, and enter state 13
			(reduce using rule 12)

	'-'            shift, and enter state 14
			(reduce using rule 12)

	'*'            shift, and enter state 15
			(reduce using rule 12)

	'/'            shift, and enter state 16
			(reduce using rule 12)

	'%'            shift, and enter state 17
			(reduce using rule 12)

	in             reduce using rule 12
	"=="           shift, and enter state 18
			(reduce using rule 12)

	"!="           shift, and enter state 19
			(reduce using rule 12)

	"<="           shift, and enter state 20
			(reduce using rule 12)

	">="           shift, and enter state 21
			(reduce using rule 12)

	"&&"           shift, and enter state 22
			(reduce using rule 12)

	"||"           shift, and enter state 23
			(reduce using rule 12)

	%eof           reduce using rule 12


State 29

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr "<=" Expr .                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 11
	'<'            shift, and enter state 11
			(reduce using rule 11)

	'>'            shift, and enter state 12
			(reduce using rule 11)

	'+'            shift, and enter state 13
			(reduce using rule 11)

	'-'            shift, and enter state 14
			(reduce using rule 11)

	'*'            shift, and enter state 15
			(reduce using rule 11)

	'/'            shift, and enter state 16
			(reduce using rule 11)

	'%'            shift, and enter state 17
			(reduce using rule 11)

	in             reduce using rule 11
	"=="           shift, and enter state 18
			(reduce using rule 11)

	"!="           shift, and enter state 19
			(reduce using rule 11)

	"<="           shift, and enter state 20
			(reduce using rule 11)

	">="           shift, and enter state 21
			(reduce using rule 11)

	"&&"           shift, and enter state 22
			(reduce using rule 11)

	"||"           shift, and enter state 23
			(reduce using rule 11)

	%eof           reduce using rule 11


State 30

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr "!=" Expr .                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 10
	'<'            shift, and enter state 11
			(reduce using rule 10)

	'>'            shift, and enter state 12
			(reduce using rule 10)

	'+'            shift, and enter state 13
			(reduce using rule 10)

	'-'            shift, and enter state 14
			(reduce using rule 10)

	'*'            shift, and enter state 15
			(reduce using rule 10)

	'/'            shift, and enter state 16
			(reduce using rule 10)

	'%'            shift, and enter state 17
			(reduce using rule 10)

	in             reduce using rule 10
	"=="           shift, and enter state 18
			(reduce using rule 10)

	"!="           shift, and enter state 19
			(reduce using rule 10)

	"<="           shift, and enter state 20
			(reduce using rule 10)

	">="           shift, and enter state 21
			(reduce using rule 10)

	"&&"           shift, and enter state 22
			(reduce using rule 10)

	"||"           shift, and enter state 23
			(reduce using rule 10)

	%eof           reduce using rule 10


State 31

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr "==" Expr .                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 9
	'<'            shift, and enter state 11
			(reduce using rule 9)

	'>'            shift, and enter state 12
			(reduce using rule 9)

	'+'            shift, and enter state 13
			(reduce using rule 9)

	'-'            shift, and enter state 14
			(reduce using rule 9)

	'*'            shift, and enter state 15
			(reduce using rule 9)

	'/'            shift, and enter state 16
			(reduce using rule 9)

	'%'            shift, and enter state 17
			(reduce using rule 9)

	in             reduce using rule 9
	"=="           shift, and enter state 18
			(reduce using rule 9)

	"!="           shift, and enter state 19
			(reduce using rule 9)

	"<="           shift, and enter state 20
			(reduce using rule 9)

	">="           shift, and enter state 21
			(reduce using rule 9)

	"&&"           shift, and enter state 22
			(reduce using rule 9)

	"||"           shift, and enter state 23
			(reduce using rule 9)

	%eof           reduce using rule 9


State 32

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr '%' Expr .                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 6
	'<'            shift, and enter state 11
			(reduce using rule 6)

	'>'            shift, and enter state 12
			(reduce using rule 6)

	'+'            shift, and enter state 13
			(reduce using rule 6)

	'-'            shift, and enter state 14
			(reduce using rule 6)

	'*'            shift, and enter state 15
			(reduce using rule 6)

	'/'            shift, and enter state 16
			(reduce using rule 6)

	'%'            shift, and enter state 17
			(reduce using rule 6)

	in             reduce using rule 6
	"=="           shift, and enter state 18
			(reduce using rule 6)

	"!="           shift, and enter state 19
			(reduce using rule 6)

	"<="           shift, and enter state 20
			(reduce using rule 6)

	">="           shift, and enter state 21
			(reduce using rule 6)

	"&&"           shift, and enter state 22
			(reduce using rule 6)

	"||"           shift, and enter state 23
			(reduce using rule 6)

	%eof           reduce using rule 6


State 33

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr '/' Expr .                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 5
	'<'            shift, and enter state 11
			(reduce using rule 5)

	'>'            shift, and enter state 12
			(reduce using rule 5)

	'+'            reduce using rule 5
	'-'            reduce using rule 5
	'*'            reduce using rule 5
	'/'            reduce using rule 5
	'%'            shift, and enter state 17
			(reduce using rule 5)

	in             reduce using rule 5
	"=="           shift, and enter state 18
			(reduce using rule 5)

	"!="           shift, and enter state 19
			(reduce using rule 5)

	"<="           shift, and enter state 20
			(reduce using rule 5)

	">="           shift, and enter state 21
			(reduce using rule 5)

	"&&"           shift, and enter state 22
			(reduce using rule 5)

	"||"           shift, and enter state 23
			(reduce using rule 5)

	%eof           reduce using rule 5


State 34

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr '*' Expr .                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 4
	'<'            shift, and enter state 11
			(reduce using rule 4)

	'>'            shift, and enter state 12
			(reduce using rule 4)

	'+'            reduce using rule 4
	'-'            reduce using rule 4
	'*'            reduce using rule 4
	'/'            reduce using rule 4
	'%'            shift, and enter state 17
			(reduce using rule 4)

	in             reduce using rule 4
	"=="           shift, and enter state 18
			(reduce using rule 4)

	"!="           shift, and enter state 19
			(reduce using rule 4)

	"<="           shift, and enter state 20
			(reduce using rule 4)

	">="           shift, and enter state 21
			(reduce using rule 4)

	"&&"           shift, and enter state 22
			(reduce using rule 4)

	"||"           shift, and enter state 23
			(reduce using rule 4)

	%eof           reduce using rule 4


State 35

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr '-' Expr .                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 3
	'<'            shift, and enter state 11
			(reduce using rule 3)

	'>'            shift, and enter state 12
			(reduce using rule 3)

	'+'            reduce using rule 3
	'-'            reduce using rule 3
	'*'            shift, and enter state 15
	'/'            shift, and enter state 16
	'%'            shift, and enter state 17
			(reduce using rule 3)

	in             reduce using rule 3
	"=="           shift, and enter state 18
			(reduce using rule 3)

	"!="           shift, and enter state 19
			(reduce using rule 3)

	"<="           shift, and enter state 20
			(reduce using rule 3)

	">="           shift, and enter state 21
			(reduce using rule 3)

	"&&"           shift, and enter state 22
			(reduce using rule 3)

	"||"           shift, and enter state 23
			(reduce using rule 3)

	%eof           reduce using rule 3


State 36

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr '+' Expr .                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 2
	'<'            shift, and enter state 11
			(reduce using rule 2)

	'>'            shift, and enter state 12
			(reduce using rule 2)

	'+'            reduce using rule 2
	'-'            reduce using rule 2
	'*'            shift, and enter state 15
	'/'            shift, and enter state 16
	'%'            shift, and enter state 17
			(reduce using rule 2)

	in             reduce using rule 2
	"=="           shift, and enter state 18
			(reduce using rule 2)

	"!="           shift, and enter state 19
			(reduce using rule 2)

	"<="           shift, and enter state 20
			(reduce using rule 2)

	">="           shift, and enter state 21
			(reduce using rule 2)

	"&&"           shift, and enter state 22
			(reduce using rule 2)

	"||"           shift, and enter state 23
			(reduce using rule 2)

	%eof           reduce using rule 2


State 37

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr '>' Expr .                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 8
	'<'            shift, and enter state 11
			(reduce using rule 8)

	'>'            shift, and enter state 12
			(reduce using rule 8)

	'+'            shift, and enter state 13
			(reduce using rule 8)

	'-'            shift, and enter state 14
			(reduce using rule 8)

	'*'            shift, and enter state 15
			(reduce using rule 8)

	'/'            shift, and enter state 16
			(reduce using rule 8)

	'%'            shift, and enter state 17
			(reduce using rule 8)

	in             reduce using rule 8
	"=="           shift, and enter state 18
			(reduce using rule 8)

	"!="           shift, and enter state 19
			(reduce using rule 8)

	"<="           shift, and enter state 20
			(reduce using rule 8)

	">="           shift, and enter state 21
			(reduce using rule 8)

	"&&"           shift, and enter state 22
			(reduce using rule 8)

	"||"           shift, and enter state 23
			(reduce using rule 8)

	%eof           reduce using rule 8


State 38

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr '<' Expr .                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 7
	'<'            shift, and enter state 11
			(reduce using rule 7)

	'>'            shift, and enter state 12
			(reduce using rule 7)

	'+'            shift, and enter state 13
			(reduce using rule 7)

	'-'            shift, and enter state 14
			(reduce using rule 7)

	'*'            shift, and enter state 15
			(reduce using rule 7)

	'/'            shift, and enter state 16
			(reduce using rule 7)

	'%'            shift, and enter state 17
			(reduce using rule 7)

	in             reduce using rule 7
	"=="           shift, and enter state 18
			(reduce using rule 7)

	"!="           shift, and enter state 19
			(reduce using rule 7)

	"<="           shift, and enter state 20
			(reduce using rule 7)

	">="           shift, and enter state 21
			(reduce using rule 7)

	"&&"           shift, and enter state 22
			(reduce using rule 7)

	"||"           shift, and enter state 23
			(reduce using rule 7)

	%eof           reduce using rule 7


State 39

	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> '(' '-' Expr . ')'                          (rule 16)

	')'            shift, and enter state 41
	'<'            shift, and enter state 11
	'>'            shift, and enter state 12
	'+'            shift, and enter state 13
	'-'            shift, and enter state 14
	'*'            shift, and enter state 15
	'/'            shift, and enter state 16
	'%'            shift, and enter state 17
	"=="           shift, and enter state 18
	"!="           shift, and enter state 19
	"<="           shift, and enter state 20
	">="           shift, and enter state 21
	"&&"           shift, and enter state 22
	"||"           shift, and enter state 23


State 40

	Expr -> '(' Expr ')' .                              (rule 17)

	')'            reduce using rule 17
	'<'            reduce using rule 17
	'>'            reduce using rule 17
	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'*'            reduce using rule 17
	'/'            reduce using rule 17
	'%'            reduce using rule 17
	in             reduce using rule 17
	"=="           reduce using rule 17
	"!="           reduce using rule 17
	"<="           reduce using rule 17
	">="           reduce using rule 17
	"&&"           reduce using rule 17
	"||"           reduce using rule 17
	%eof           reduce using rule 17


State 41

	Expr -> '(' '-' Expr ')' .                          (rule 16)

	')'            reduce using rule 16
	'<'            reduce using rule 16
	'>'            reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            reduce using rule 16
	'/'            reduce using rule 16
	'%'            reduce using rule 16
	in             reduce using rule 16
	"=="           reduce using rule 16
	"!="           reduce using rule 16
	"<="           reduce using rule 16
	">="           reduce using rule 16
	"&&"           reduce using rule 16
	"||"           reduce using rule 16
	%eof           reduce using rule 16


State 42

	Expr -> let Expr in Expr .                          (rule 1)
	Expr -> Expr . '+' Expr                             (rule 2)
	Expr -> Expr . '-' Expr                             (rule 3)
	Expr -> Expr . '*' Expr                             (rule 4)
	Expr -> Expr . '/' Expr                             (rule 5)
	Expr -> Expr . '%' Expr                             (rule 6)
	Expr -> Expr . '<' Expr                             (rule 7)
	Expr -> Expr . '>' Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	')'            reduce using rule 1
	'<'            shift, and enter state 11
			(reduce using rule 1)

	'>'            shift, and enter state 12
			(reduce using rule 1)

	'+'            shift, and enter state 13
	'-'            shift, and enter state 14
	'*'            shift, and enter state 15
	'/'            shift, and enter state 16
	'%'            shift, and enter state 17
			(reduce using rule 1)

	in             reduce using rule 1
	"=="           shift, and enter state 18
			(reduce using rule 1)

	"!="           shift, and enter state 19
			(reduce using rule 1)

	"<="           shift, and enter state 20
			(reduce using rule 1)

	">="           shift, and enter state 21
			(reduce using rule 1)

	"&&"           shift, and enter state 22
			(reduce using rule 1)

	"||"           shift, and enter state 23
			(reduce using rule 1)

	%eof           reduce using rule 1


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 20
Number of terminals: 27
Number of non-terminals: 2
Number of states: 43
