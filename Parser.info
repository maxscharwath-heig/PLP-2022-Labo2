-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from Parser.y
-----------------------------------------------------------------------------

state 13 contains 13 shift/reduce conflicts.
state 14 contains 1 shift/reduce conflicts.
state 34 contains 13 shift/reduce conflicts.
state 35 contains 13 shift/reduce conflicts.
state 36 contains 13 shift/reduce conflicts.
state 37 contains 13 shift/reduce conflicts.
state 38 contains 13 shift/reduce conflicts.
state 39 contains 13 shift/reduce conflicts.
state 40 contains 13 shift/reduce conflicts.
state 41 contains 13 shift/reduce conflicts.
state 42 contains 13 shift/reduce conflicts.
state 43 contains 13 shift/reduce conflicts.
state 44 contains 13 shift/reduce conflicts.
state 45 contains 13 shift/reduce conflicts.
state 46 contains 13 shift/reduce conflicts.
state 60 contains 13 shift/reduce conflicts.
state 64 contains 13 shift/reduce conflicts.
state 68 contains 13 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Expr                              (0)
	Expr -> let identifier "=" Expr in Expr            (1)
	Expr -> Expr "+" Expr                              (2)
	Expr -> Expr "-" Expr                              (3)
	Expr -> Expr "*" Expr                              (4)
	Expr -> Expr "/" Expr                              (5)
	Expr -> Expr "%" Expr                              (6)
	Expr -> Expr "<" Expr                              (7)
	Expr -> Expr ">" Expr                              (8)
	Expr -> Expr "==" Expr                             (9)
	Expr -> Expr "!=" Expr                             (10)
	Expr -> Expr "<=" Expr                             (11)
	Expr -> Expr ">=" Expr                             (12)
	Expr -> Expr "&&" Expr                             (13)
	Expr -> Expr "||" Expr                             (14)
	Expr -> "(" Expr ")"                               (15)
	Expr -> "(" Exprs ")"                              (16)
	Expr -> "!" Expr                                   (17)
	Expr -> identifier                                 (18)
	Expr -> identifier "(" Exprs ")"                   (19)
	Expr -> funDecSym identifier identifiers "=" Expr   (20)
	Expr -> varDecSym identifier in Expr               (21)
	Expr -> int                                        (22)
	Expr -> bool                                       (23)
	Expr -> case Expr of Expr in Expr end in Expr end end   (24)
	Exprs -> Expr                                      (25)
	Exprs -> Expr "," Exprs                            (26)
	identifiers -> identifier                          (27)
	identifiers -> identifier "," identifiers          (28)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { TInt $$ }
	bool           { TBool $$ }
	identifier     { TIdentifier $$ }
	varDecSym      { TVarDec }
	funDecSym      { TFunDec }
	"("            { TSym '(' }
	")"            { TSym ')' }
	"="            { TSym '=' }
	"<"            { TSym '<' }
	">"            { TSym '>' }
	"+"            { TSym '+' }
	"-"            { TSym '-' }
	"*"            { TSym '*' }
	"/"            { TSym '/' }
	"%"            { TSym '%' }
	"!"            { TSym '!' }
	let            { TLet }
	in             { TIn }
	case           { TCase }
	of             { TOf }
	","            { TSym ',' }
	end            { TEnd }
	"=="           { TDSym "==" }
	"!="           { TDSym "!=" }
	"<="           { TDSym "<=" }
	">="           { TDSym ">=" }
	"&&"           { TDSym "&&" }
	"||"           { TDSym "||" }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Expr            rules 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
	Exprs           rules 25, 26
	identifiers     rules 27, 28

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 3

State 1


	let            shift, and enter state 2


State 2

	Expr -> let . identifier "=" Expr in Expr           (rule 1)

	identifier     shift, and enter state 32


State 3

	%start_parser -> Expr .                             (rule 0)
	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	"<"            shift, and enter state 19
	">"            shift, and enter state 20
	"+"            shift, and enter state 21
	"-"            shift, and enter state 22
	"*"            shift, and enter state 23
	"/"            shift, and enter state 24
	"%"            shift, and enter state 25
	"=="           shift, and enter state 26
	"!="           shift, and enter state 27
	"<="           shift, and enter state 28
	">="           shift, and enter state 29
	"&&"           shift, and enter state 30
	"||"           shift, and enter state 31
	%eof           accept


State 4

	Expr -> int .                                       (rule 22)

	")"            reduce using rule 22
	"<"            reduce using rule 22
	">"            reduce using rule 22
	"+"            reduce using rule 22
	"-"            reduce using rule 22
	"*"            reduce using rule 22
	"/"            reduce using rule 22
	"%"            reduce using rule 22
	in             reduce using rule 22
	of             reduce using rule 22
	","            reduce using rule 22
	end            reduce using rule 22
	"=="           reduce using rule 22
	"!="           reduce using rule 22
	"<="           reduce using rule 22
	">="           reduce using rule 22
	"&&"           reduce using rule 22
	"||"           reduce using rule 22
	%eof           reduce using rule 22


State 5

	Expr -> bool .                                      (rule 23)

	")"            reduce using rule 23
	"<"            reduce using rule 23
	">"            reduce using rule 23
	"+"            reduce using rule 23
	"-"            reduce using rule 23
	"*"            reduce using rule 23
	"/"            reduce using rule 23
	"%"            reduce using rule 23
	in             reduce using rule 23
	of             reduce using rule 23
	","            reduce using rule 23
	end            reduce using rule 23
	"=="           reduce using rule 23
	"!="           reduce using rule 23
	"<="           reduce using rule 23
	">="           reduce using rule 23
	"&&"           reduce using rule 23
	"||"           reduce using rule 23
	%eof           reduce using rule 23


State 6

	Expr -> identifier .                                (rule 18)
	Expr -> identifier . "(" Exprs ")"                  (rule 19)

	"("            shift, and enter state 18
	")"            reduce using rule 18
	"<"            reduce using rule 18
	">"            reduce using rule 18
	"+"            reduce using rule 18
	"-"            reduce using rule 18
	"*"            reduce using rule 18
	"/"            reduce using rule 18
	"%"            reduce using rule 18
	in             reduce using rule 18
	of             reduce using rule 18
	","            reduce using rule 18
	end            reduce using rule 18
	"=="           reduce using rule 18
	"!="           reduce using rule 18
	"<="           reduce using rule 18
	">="           reduce using rule 18
	"&&"           reduce using rule 18
	"||"           reduce using rule 18
	%eof           reduce using rule 18


State 7

	Expr -> varDecSym . identifier in Expr              (rule 21)

	identifier     shift, and enter state 17


State 8

	Expr -> funDecSym . identifier identifiers "=" Expr    (rule 20)

	identifier     shift, and enter state 16


State 9

	Expr -> "(" . Expr ")"                              (rule 15)
	Expr -> "(" . Exprs ")"                             (rule 16)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 14
	Exprs          goto state 15

State 10

	Expr -> "!" . Expr                                  (rule 17)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 13

State 11

	Expr -> case . Expr of Expr in Expr end in Expr end end    (rule 24)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 12

State 12

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> case Expr . of Expr in Expr end in Expr end end    (rule 24)

	"<"            shift, and enter state 19
	">"            shift, and enter state 20
	"+"            shift, and enter state 21
	"-"            shift, and enter state 22
	"*"            shift, and enter state 23
	"/"            shift, and enter state 24
	"%"            shift, and enter state 25
	of             shift, and enter state 55
	"=="           shift, and enter state 26
	"!="           shift, and enter state 27
	"<="           shift, and enter state 28
	">="           shift, and enter state 29
	"&&"           shift, and enter state 30
	"||"           shift, and enter state 31


State 13

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> "!" Expr .                                  (rule 17)

	")"            reduce using rule 17
	"<"            shift, and enter state 19
			(reduce using rule 17)

	">"            shift, and enter state 20
			(reduce using rule 17)

	"+"            shift, and enter state 21
			(reduce using rule 17)

	"-"            shift, and enter state 22
			(reduce using rule 17)

	"*"            shift, and enter state 23
			(reduce using rule 17)

	"/"            shift, and enter state 24
			(reduce using rule 17)

	"%"            shift, and enter state 25
			(reduce using rule 17)

	in             reduce using rule 17
	of             reduce using rule 17
	","            reduce using rule 17
	end            reduce using rule 17
	"=="           shift, and enter state 26
			(reduce using rule 17)

	"!="           shift, and enter state 27
			(reduce using rule 17)

	"<="           shift, and enter state 28
			(reduce using rule 17)

	">="           shift, and enter state 29
			(reduce using rule 17)

	"&&"           shift, and enter state 30
			(reduce using rule 17)

	"||"           shift, and enter state 31
			(reduce using rule 17)

	%eof           reduce using rule 17


State 14

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> "(" Expr . ")"                              (rule 15)
	Exprs -> Expr .                                     (rule 25)
	Exprs -> Expr . "," Exprs                           (rule 26)

	")"            shift, and enter state 53
			(reduce using rule 25)

	"<"            shift, and enter state 19
	">"            shift, and enter state 20
	"+"            shift, and enter state 21
	"-"            shift, and enter state 22
	"*"            shift, and enter state 23
	"/"            shift, and enter state 24
	"%"            shift, and enter state 25
	","            shift, and enter state 54
	"=="           shift, and enter state 26
	"!="           shift, and enter state 27
	"<="           shift, and enter state 28
	">="           shift, and enter state 29
	"&&"           shift, and enter state 30
	"||"           shift, and enter state 31


State 15

	Expr -> "(" Exprs . ")"                             (rule 16)

	")"            shift, and enter state 52


State 16

	Expr -> funDecSym identifier . identifiers "=" Expr    (rule 20)

	identifier     shift, and enter state 51

	identifiers    goto state 50

State 17

	Expr -> varDecSym identifier . in Expr              (rule 21)

	in             shift, and enter state 49


State 18

	Expr -> identifier "(" . Exprs ")"                  (rule 19)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 47
	Exprs          goto state 48

State 19

	Expr -> Expr "<" . Expr                             (rule 7)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 46

State 20

	Expr -> Expr ">" . Expr                             (rule 8)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 45

State 21

	Expr -> Expr "+" . Expr                             (rule 2)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 44

State 22

	Expr -> Expr "-" . Expr                             (rule 3)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 43

State 23

	Expr -> Expr "*" . Expr                             (rule 4)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 42

State 24

	Expr -> Expr "/" . Expr                             (rule 5)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 41

State 25

	Expr -> Expr "%" . Expr                             (rule 6)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 40

State 26

	Expr -> Expr "==" . Expr                            (rule 9)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 39

State 27

	Expr -> Expr "!=" . Expr                            (rule 10)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 38

State 28

	Expr -> Expr "<=" . Expr                            (rule 11)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 37

State 29

	Expr -> Expr ">=" . Expr                            (rule 12)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 36

State 30

	Expr -> Expr "&&" . Expr                            (rule 13)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 35

State 31

	Expr -> Expr "||" . Expr                            (rule 14)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 34

State 32

	Expr -> let identifier . "=" Expr in Expr           (rule 1)

	"="            shift, and enter state 33


State 33

	Expr -> let identifier "=" . Expr in Expr           (rule 1)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 62

State 34

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> Expr "||" Expr .                            (rule 14)

	")"            reduce using rule 14
	"<"            shift, and enter state 19
			(reduce using rule 14)

	">"            shift, and enter state 20
			(reduce using rule 14)

	"+"            shift, and enter state 21
			(reduce using rule 14)

	"-"            shift, and enter state 22
			(reduce using rule 14)

	"*"            shift, and enter state 23
			(reduce using rule 14)

	"/"            shift, and enter state 24
			(reduce using rule 14)

	"%"            shift, and enter state 25
			(reduce using rule 14)

	in             reduce using rule 14
	of             reduce using rule 14
	","            reduce using rule 14
	end            reduce using rule 14
	"=="           shift, and enter state 26
			(reduce using rule 14)

	"!="           shift, and enter state 27
			(reduce using rule 14)

	"<="           shift, and enter state 28
			(reduce using rule 14)

	">="           shift, and enter state 29
			(reduce using rule 14)

	"&&"           shift, and enter state 30
			(reduce using rule 14)

	"||"           shift, and enter state 31
			(reduce using rule 14)

	%eof           reduce using rule 14


State 35

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr "&&" Expr .                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 13
	"<"            shift, and enter state 19
			(reduce using rule 13)

	">"            shift, and enter state 20
			(reduce using rule 13)

	"+"            shift, and enter state 21
			(reduce using rule 13)

	"-"            shift, and enter state 22
			(reduce using rule 13)

	"*"            shift, and enter state 23
			(reduce using rule 13)

	"/"            shift, and enter state 24
			(reduce using rule 13)

	"%"            shift, and enter state 25
			(reduce using rule 13)

	in             reduce using rule 13
	of             reduce using rule 13
	","            reduce using rule 13
	end            reduce using rule 13
	"=="           shift, and enter state 26
			(reduce using rule 13)

	"!="           shift, and enter state 27
			(reduce using rule 13)

	"<="           shift, and enter state 28
			(reduce using rule 13)

	">="           shift, and enter state 29
			(reduce using rule 13)

	"&&"           shift, and enter state 30
			(reduce using rule 13)

	"||"           shift, and enter state 31
			(reduce using rule 13)

	%eof           reduce using rule 13


State 36

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr ">=" Expr .                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 12
	"<"            shift, and enter state 19
			(reduce using rule 12)

	">"            shift, and enter state 20
			(reduce using rule 12)

	"+"            shift, and enter state 21
			(reduce using rule 12)

	"-"            shift, and enter state 22
			(reduce using rule 12)

	"*"            shift, and enter state 23
			(reduce using rule 12)

	"/"            shift, and enter state 24
			(reduce using rule 12)

	"%"            shift, and enter state 25
			(reduce using rule 12)

	in             reduce using rule 12
	of             reduce using rule 12
	","            reduce using rule 12
	end            reduce using rule 12
	"=="           shift, and enter state 26
			(reduce using rule 12)

	"!="           shift, and enter state 27
			(reduce using rule 12)

	"<="           shift, and enter state 28
			(reduce using rule 12)

	">="           shift, and enter state 29
			(reduce using rule 12)

	"&&"           shift, and enter state 30
			(reduce using rule 12)

	"||"           shift, and enter state 31
			(reduce using rule 12)

	%eof           reduce using rule 12


State 37

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr "<=" Expr .                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 11
	"<"            shift, and enter state 19
			(reduce using rule 11)

	">"            shift, and enter state 20
			(reduce using rule 11)

	"+"            shift, and enter state 21
			(reduce using rule 11)

	"-"            shift, and enter state 22
			(reduce using rule 11)

	"*"            shift, and enter state 23
			(reduce using rule 11)

	"/"            shift, and enter state 24
			(reduce using rule 11)

	"%"            shift, and enter state 25
			(reduce using rule 11)

	in             reduce using rule 11
	of             reduce using rule 11
	","            reduce using rule 11
	end            reduce using rule 11
	"=="           shift, and enter state 26
			(reduce using rule 11)

	"!="           shift, and enter state 27
			(reduce using rule 11)

	"<="           shift, and enter state 28
			(reduce using rule 11)

	">="           shift, and enter state 29
			(reduce using rule 11)

	"&&"           shift, and enter state 30
			(reduce using rule 11)

	"||"           shift, and enter state 31
			(reduce using rule 11)

	%eof           reduce using rule 11


State 38

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr "!=" Expr .                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 10
	"<"            shift, and enter state 19
			(reduce using rule 10)

	">"            shift, and enter state 20
			(reduce using rule 10)

	"+"            shift, and enter state 21
			(reduce using rule 10)

	"-"            shift, and enter state 22
			(reduce using rule 10)

	"*"            shift, and enter state 23
			(reduce using rule 10)

	"/"            shift, and enter state 24
			(reduce using rule 10)

	"%"            shift, and enter state 25
			(reduce using rule 10)

	in             reduce using rule 10
	of             reduce using rule 10
	","            reduce using rule 10
	end            reduce using rule 10
	"=="           shift, and enter state 26
			(reduce using rule 10)

	"!="           shift, and enter state 27
			(reduce using rule 10)

	"<="           shift, and enter state 28
			(reduce using rule 10)

	">="           shift, and enter state 29
			(reduce using rule 10)

	"&&"           shift, and enter state 30
			(reduce using rule 10)

	"||"           shift, and enter state 31
			(reduce using rule 10)

	%eof           reduce using rule 10


State 39

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr "==" Expr .                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 9
	"<"            shift, and enter state 19
			(reduce using rule 9)

	">"            shift, and enter state 20
			(reduce using rule 9)

	"+"            shift, and enter state 21
			(reduce using rule 9)

	"-"            shift, and enter state 22
			(reduce using rule 9)

	"*"            shift, and enter state 23
			(reduce using rule 9)

	"/"            shift, and enter state 24
			(reduce using rule 9)

	"%"            shift, and enter state 25
			(reduce using rule 9)

	in             reduce using rule 9
	of             reduce using rule 9
	","            reduce using rule 9
	end            reduce using rule 9
	"=="           shift, and enter state 26
			(reduce using rule 9)

	"!="           shift, and enter state 27
			(reduce using rule 9)

	"<="           shift, and enter state 28
			(reduce using rule 9)

	">="           shift, and enter state 29
			(reduce using rule 9)

	"&&"           shift, and enter state 30
			(reduce using rule 9)

	"||"           shift, and enter state 31
			(reduce using rule 9)

	%eof           reduce using rule 9


State 40

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr "%" Expr .                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 6
	"<"            shift, and enter state 19
			(reduce using rule 6)

	">"            shift, and enter state 20
			(reduce using rule 6)

	"+"            shift, and enter state 21
			(reduce using rule 6)

	"-"            shift, and enter state 22
			(reduce using rule 6)

	"*"            shift, and enter state 23
			(reduce using rule 6)

	"/"            shift, and enter state 24
			(reduce using rule 6)

	"%"            shift, and enter state 25
			(reduce using rule 6)

	in             reduce using rule 6
	of             reduce using rule 6
	","            reduce using rule 6
	end            reduce using rule 6
	"=="           shift, and enter state 26
			(reduce using rule 6)

	"!="           shift, and enter state 27
			(reduce using rule 6)

	"<="           shift, and enter state 28
			(reduce using rule 6)

	">="           shift, and enter state 29
			(reduce using rule 6)

	"&&"           shift, and enter state 30
			(reduce using rule 6)

	"||"           shift, and enter state 31
			(reduce using rule 6)

	%eof           reduce using rule 6


State 41

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr "/" Expr .                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 5
	"<"            shift, and enter state 19
			(reduce using rule 5)

	">"            shift, and enter state 20
			(reduce using rule 5)

	"+"            shift, and enter state 21
			(reduce using rule 5)

	"-"            shift, and enter state 22
			(reduce using rule 5)

	"*"            shift, and enter state 23
			(reduce using rule 5)

	"/"            shift, and enter state 24
			(reduce using rule 5)

	"%"            shift, and enter state 25
			(reduce using rule 5)

	in             reduce using rule 5
	of             reduce using rule 5
	","            reduce using rule 5
	end            reduce using rule 5
	"=="           shift, and enter state 26
			(reduce using rule 5)

	"!="           shift, and enter state 27
			(reduce using rule 5)

	"<="           shift, and enter state 28
			(reduce using rule 5)

	">="           shift, and enter state 29
			(reduce using rule 5)

	"&&"           shift, and enter state 30
			(reduce using rule 5)

	"||"           shift, and enter state 31
			(reduce using rule 5)

	%eof           reduce using rule 5


State 42

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr "*" Expr .                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 4
	"<"            shift, and enter state 19
			(reduce using rule 4)

	">"            shift, and enter state 20
			(reduce using rule 4)

	"+"            shift, and enter state 21
			(reduce using rule 4)

	"-"            shift, and enter state 22
			(reduce using rule 4)

	"*"            shift, and enter state 23
			(reduce using rule 4)

	"/"            shift, and enter state 24
			(reduce using rule 4)

	"%"            shift, and enter state 25
			(reduce using rule 4)

	in             reduce using rule 4
	of             reduce using rule 4
	","            reduce using rule 4
	end            reduce using rule 4
	"=="           shift, and enter state 26
			(reduce using rule 4)

	"!="           shift, and enter state 27
			(reduce using rule 4)

	"<="           shift, and enter state 28
			(reduce using rule 4)

	">="           shift, and enter state 29
			(reduce using rule 4)

	"&&"           shift, and enter state 30
			(reduce using rule 4)

	"||"           shift, and enter state 31
			(reduce using rule 4)

	%eof           reduce using rule 4


State 43

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr "-" Expr .                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 3
	"<"            shift, and enter state 19
			(reduce using rule 3)

	">"            shift, and enter state 20
			(reduce using rule 3)

	"+"            shift, and enter state 21
			(reduce using rule 3)

	"-"            shift, and enter state 22
			(reduce using rule 3)

	"*"            shift, and enter state 23
			(reduce using rule 3)

	"/"            shift, and enter state 24
			(reduce using rule 3)

	"%"            shift, and enter state 25
			(reduce using rule 3)

	in             reduce using rule 3
	of             reduce using rule 3
	","            reduce using rule 3
	end            reduce using rule 3
	"=="           shift, and enter state 26
			(reduce using rule 3)

	"!="           shift, and enter state 27
			(reduce using rule 3)

	"<="           shift, and enter state 28
			(reduce using rule 3)

	">="           shift, and enter state 29
			(reduce using rule 3)

	"&&"           shift, and enter state 30
			(reduce using rule 3)

	"||"           shift, and enter state 31
			(reduce using rule 3)

	%eof           reduce using rule 3


State 44

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr "+" Expr .                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 2
	"<"            shift, and enter state 19
			(reduce using rule 2)

	">"            shift, and enter state 20
			(reduce using rule 2)

	"+"            shift, and enter state 21
			(reduce using rule 2)

	"-"            shift, and enter state 22
			(reduce using rule 2)

	"*"            shift, and enter state 23
			(reduce using rule 2)

	"/"            shift, and enter state 24
			(reduce using rule 2)

	"%"            shift, and enter state 25
			(reduce using rule 2)

	in             reduce using rule 2
	of             reduce using rule 2
	","            reduce using rule 2
	end            reduce using rule 2
	"=="           shift, and enter state 26
			(reduce using rule 2)

	"!="           shift, and enter state 27
			(reduce using rule 2)

	"<="           shift, and enter state 28
			(reduce using rule 2)

	">="           shift, and enter state 29
			(reduce using rule 2)

	"&&"           shift, and enter state 30
			(reduce using rule 2)

	"||"           shift, and enter state 31
			(reduce using rule 2)

	%eof           reduce using rule 2


State 45

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr ">" Expr .                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 8
	"<"            shift, and enter state 19
			(reduce using rule 8)

	">"            shift, and enter state 20
			(reduce using rule 8)

	"+"            shift, and enter state 21
			(reduce using rule 8)

	"-"            shift, and enter state 22
			(reduce using rule 8)

	"*"            shift, and enter state 23
			(reduce using rule 8)

	"/"            shift, and enter state 24
			(reduce using rule 8)

	"%"            shift, and enter state 25
			(reduce using rule 8)

	in             reduce using rule 8
	of             reduce using rule 8
	","            reduce using rule 8
	end            reduce using rule 8
	"=="           shift, and enter state 26
			(reduce using rule 8)

	"!="           shift, and enter state 27
			(reduce using rule 8)

	"<="           shift, and enter state 28
			(reduce using rule 8)

	">="           shift, and enter state 29
			(reduce using rule 8)

	"&&"           shift, and enter state 30
			(reduce using rule 8)

	"||"           shift, and enter state 31
			(reduce using rule 8)

	%eof           reduce using rule 8


State 46

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr "<" Expr .                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 7
	"<"            shift, and enter state 19
			(reduce using rule 7)

	">"            shift, and enter state 20
			(reduce using rule 7)

	"+"            shift, and enter state 21
			(reduce using rule 7)

	"-"            shift, and enter state 22
			(reduce using rule 7)

	"*"            shift, and enter state 23
			(reduce using rule 7)

	"/"            shift, and enter state 24
			(reduce using rule 7)

	"%"            shift, and enter state 25
			(reduce using rule 7)

	in             reduce using rule 7
	of             reduce using rule 7
	","            reduce using rule 7
	end            reduce using rule 7
	"=="           shift, and enter state 26
			(reduce using rule 7)

	"!="           shift, and enter state 27
			(reduce using rule 7)

	"<="           shift, and enter state 28
			(reduce using rule 7)

	">="           shift, and enter state 29
			(reduce using rule 7)

	"&&"           shift, and enter state 30
			(reduce using rule 7)

	"||"           shift, and enter state 31
			(reduce using rule 7)

	%eof           reduce using rule 7


State 47

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Exprs -> Expr .                                     (rule 25)
	Exprs -> Expr . "," Exprs                           (rule 26)

	")"            reduce using rule 25
	"<"            shift, and enter state 19
	">"            shift, and enter state 20
	"+"            shift, and enter state 21
	"-"            shift, and enter state 22
	"*"            shift, and enter state 23
	"/"            shift, and enter state 24
	"%"            shift, and enter state 25
	","            shift, and enter state 54
	"=="           shift, and enter state 26
	"!="           shift, and enter state 27
	"<="           shift, and enter state 28
	">="           shift, and enter state 29
	"&&"           shift, and enter state 30
	"||"           shift, and enter state 31


State 48

	Expr -> identifier "(" Exprs . ")"                  (rule 19)

	")"            shift, and enter state 61


State 49

	Expr -> varDecSym identifier in . Expr              (rule 21)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 60

State 50

	Expr -> funDecSym identifier identifiers . "=" Expr    (rule 20)

	"="            shift, and enter state 59


State 51

	identifiers -> identifier .                         (rule 27)
	identifiers -> identifier . "," identifiers         (rule 28)

	"="            reduce using rule 27
	","            shift, and enter state 58


State 52

	Expr -> "(" Exprs ")" .                             (rule 16)

	")"            reduce using rule 16
	"<"            reduce using rule 16
	">"            reduce using rule 16
	"+"            reduce using rule 16
	"-"            reduce using rule 16
	"*"            reduce using rule 16
	"/"            reduce using rule 16
	"%"            reduce using rule 16
	in             reduce using rule 16
	of             reduce using rule 16
	","            reduce using rule 16
	end            reduce using rule 16
	"=="           reduce using rule 16
	"!="           reduce using rule 16
	"<="           reduce using rule 16
	">="           reduce using rule 16
	"&&"           reduce using rule 16
	"||"           reduce using rule 16
	%eof           reduce using rule 16


State 53

	Expr -> "(" Expr ")" .                              (rule 15)

	")"            reduce using rule 15
	"<"            reduce using rule 15
	">"            reduce using rule 15
	"+"            reduce using rule 15
	"-"            reduce using rule 15
	"*"            reduce using rule 15
	"/"            reduce using rule 15
	"%"            reduce using rule 15
	in             reduce using rule 15
	of             reduce using rule 15
	","            reduce using rule 15
	end            reduce using rule 15
	"=="           reduce using rule 15
	"!="           reduce using rule 15
	"<="           reduce using rule 15
	">="           reduce using rule 15
	"&&"           reduce using rule 15
	"||"           reduce using rule 15
	%eof           reduce using rule 15


State 54

	Exprs -> Expr "," . Exprs                           (rule 26)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 47
	Exprs          goto state 57

State 55

	Expr -> case Expr of . Expr in Expr end in Expr end end    (rule 24)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 56

State 56

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> case Expr of Expr . in Expr end in Expr end end    (rule 24)

	"<"            shift, and enter state 19
	">"            shift, and enter state 20
	"+"            shift, and enter state 21
	"-"            shift, and enter state 22
	"*"            shift, and enter state 23
	"/"            shift, and enter state 24
	"%"            shift, and enter state 25
	in             shift, and enter state 66
	"=="           shift, and enter state 26
	"!="           shift, and enter state 27
	"<="           shift, and enter state 28
	">="           shift, and enter state 29
	"&&"           shift, and enter state 30
	"||"           shift, and enter state 31


State 57

	Exprs -> Expr "," Exprs .                           (rule 26)

	")"            reduce using rule 26


State 58

	identifiers -> identifier "," . identifiers         (rule 28)

	identifier     shift, and enter state 51

	identifiers    goto state 65

State 59

	Expr -> funDecSym identifier identifiers "=" . Expr    (rule 20)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 64

State 60

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> varDecSym identifier in Expr .              (rule 21)

	")"            reduce using rule 21
	"<"            shift, and enter state 19
			(reduce using rule 21)

	">"            shift, and enter state 20
			(reduce using rule 21)

	"+"            shift, and enter state 21
			(reduce using rule 21)

	"-"            shift, and enter state 22
			(reduce using rule 21)

	"*"            shift, and enter state 23
			(reduce using rule 21)

	"/"            shift, and enter state 24
			(reduce using rule 21)

	"%"            shift, and enter state 25
			(reduce using rule 21)

	in             reduce using rule 21
	of             reduce using rule 21
	","            reduce using rule 21
	end            reduce using rule 21
	"=="           shift, and enter state 26
			(reduce using rule 21)

	"!="           shift, and enter state 27
			(reduce using rule 21)

	"<="           shift, and enter state 28
			(reduce using rule 21)

	">="           shift, and enter state 29
			(reduce using rule 21)

	"&&"           shift, and enter state 30
			(reduce using rule 21)

	"||"           shift, and enter state 31
			(reduce using rule 21)

	%eof           reduce using rule 21


State 61

	Expr -> identifier "(" Exprs ")" .                  (rule 19)

	")"            reduce using rule 19
	"<"            reduce using rule 19
	">"            reduce using rule 19
	"+"            reduce using rule 19
	"-"            reduce using rule 19
	"*"            reduce using rule 19
	"/"            reduce using rule 19
	"%"            reduce using rule 19
	in             reduce using rule 19
	of             reduce using rule 19
	","            reduce using rule 19
	end            reduce using rule 19
	"=="           reduce using rule 19
	"!="           reduce using rule 19
	"<="           reduce using rule 19
	">="           reduce using rule 19
	"&&"           reduce using rule 19
	"||"           reduce using rule 19
	%eof           reduce using rule 19


State 62

	Expr -> let identifier "=" Expr . in Expr           (rule 1)
	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	"<"            shift, and enter state 19
	">"            shift, and enter state 20
	"+"            shift, and enter state 21
	"-"            shift, and enter state 22
	"*"            shift, and enter state 23
	"/"            shift, and enter state 24
	"%"            shift, and enter state 25
	in             shift, and enter state 63
	"=="           shift, and enter state 26
	"!="           shift, and enter state 27
	"<="           shift, and enter state 28
	">="           shift, and enter state 29
	"&&"           shift, and enter state 30
	"||"           shift, and enter state 31


State 63

	Expr -> let identifier "=" Expr in . Expr           (rule 1)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 68

State 64

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> funDecSym identifier identifiers "=" Expr .    (rule 20)

	")"            reduce using rule 20
	"<"            shift, and enter state 19
			(reduce using rule 20)

	">"            shift, and enter state 20
			(reduce using rule 20)

	"+"            shift, and enter state 21
			(reduce using rule 20)

	"-"            shift, and enter state 22
			(reduce using rule 20)

	"*"            shift, and enter state 23
			(reduce using rule 20)

	"/"            shift, and enter state 24
			(reduce using rule 20)

	"%"            shift, and enter state 25
			(reduce using rule 20)

	in             reduce using rule 20
	of             reduce using rule 20
	","            reduce using rule 20
	end            reduce using rule 20
	"=="           shift, and enter state 26
			(reduce using rule 20)

	"!="           shift, and enter state 27
			(reduce using rule 20)

	"<="           shift, and enter state 28
			(reduce using rule 20)

	">="           shift, and enter state 29
			(reduce using rule 20)

	"&&"           shift, and enter state 30
			(reduce using rule 20)

	"||"           shift, and enter state 31
			(reduce using rule 20)

	%eof           reduce using rule 20


State 65

	identifiers -> identifier "," identifiers .         (rule 28)

	"="            reduce using rule 28


State 66

	Expr -> case Expr of Expr in . Expr end in Expr end end    (rule 24)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 67

State 67

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> case Expr of Expr in Expr . end in Expr end end    (rule 24)

	"<"            shift, and enter state 19
	">"            shift, and enter state 20
	"+"            shift, and enter state 21
	"-"            shift, and enter state 22
	"*"            shift, and enter state 23
	"/"            shift, and enter state 24
	"%"            shift, and enter state 25
	end            shift, and enter state 69
	"=="           shift, and enter state 26
	"!="           shift, and enter state 27
	"<="           shift, and enter state 28
	">="           shift, and enter state 29
	"&&"           shift, and enter state 30
	"||"           shift, and enter state 31


State 68

	Expr -> let identifier "=" Expr in Expr .           (rule 1)
	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)

	")"            reduce using rule 1
	"<"            shift, and enter state 19
			(reduce using rule 1)

	">"            shift, and enter state 20
			(reduce using rule 1)

	"+"            shift, and enter state 21
			(reduce using rule 1)

	"-"            shift, and enter state 22
			(reduce using rule 1)

	"*"            shift, and enter state 23
			(reduce using rule 1)

	"/"            shift, and enter state 24
			(reduce using rule 1)

	"%"            shift, and enter state 25
			(reduce using rule 1)

	in             reduce using rule 1
	of             reduce using rule 1
	","            reduce using rule 1
	end            reduce using rule 1
	"=="           shift, and enter state 26
			(reduce using rule 1)

	"!="           shift, and enter state 27
			(reduce using rule 1)

	"<="           shift, and enter state 28
			(reduce using rule 1)

	">="           shift, and enter state 29
			(reduce using rule 1)

	"&&"           shift, and enter state 30
			(reduce using rule 1)

	"||"           shift, and enter state 31
			(reduce using rule 1)

	%eof           reduce using rule 1


State 69

	Expr -> case Expr of Expr in Expr end . in Expr end end    (rule 24)

	in             shift, and enter state 70


State 70

	Expr -> case Expr of Expr in Expr end in . Expr end end    (rule 24)

	int            shift, and enter state 4
	bool           shift, and enter state 5
	identifier     shift, and enter state 6
	varDecSym      shift, and enter state 7
	funDecSym      shift, and enter state 8
	"("            shift, and enter state 9
	"!"            shift, and enter state 10
	let            shift, and enter state 2
	case           shift, and enter state 11

	Expr           goto state 71

State 71

	Expr -> Expr . "+" Expr                             (rule 2)
	Expr -> Expr . "-" Expr                             (rule 3)
	Expr -> Expr . "*" Expr                             (rule 4)
	Expr -> Expr . "/" Expr                             (rule 5)
	Expr -> Expr . "%" Expr                             (rule 6)
	Expr -> Expr . "<" Expr                             (rule 7)
	Expr -> Expr . ">" Expr                             (rule 8)
	Expr -> Expr . "==" Expr                            (rule 9)
	Expr -> Expr . "!=" Expr                            (rule 10)
	Expr -> Expr . "<=" Expr                            (rule 11)
	Expr -> Expr . ">=" Expr                            (rule 12)
	Expr -> Expr . "&&" Expr                            (rule 13)
	Expr -> Expr . "||" Expr                            (rule 14)
	Expr -> case Expr of Expr in Expr end in Expr . end end    (rule 24)

	"<"            shift, and enter state 19
	">"            shift, and enter state 20
	"+"            shift, and enter state 21
	"-"            shift, and enter state 22
	"*"            shift, and enter state 23
	"/"            shift, and enter state 24
	"%"            shift, and enter state 25
	end            shift, and enter state 72
	"=="           shift, and enter state 26
	"!="           shift, and enter state 27
	"<="           shift, and enter state 28
	">="           shift, and enter state 29
	"&&"           shift, and enter state 30
	"||"           shift, and enter state 31


State 72

	Expr -> case Expr of Expr in Expr end in Expr end . end    (rule 24)

	end            shift, and enter state 73


State 73

	Expr -> case Expr of Expr in Expr end in Expr end end .    (rule 24)

	")"            reduce using rule 24
	"<"            reduce using rule 24
	">"            reduce using rule 24
	"+"            reduce using rule 24
	"-"            reduce using rule 24
	"*"            reduce using rule 24
	"/"            reduce using rule 24
	"%"            reduce using rule 24
	in             reduce using rule 24
	of             reduce using rule 24
	","            reduce using rule 24
	end            reduce using rule 24
	"=="           reduce using rule 24
	"!="           reduce using rule 24
	"<="           reduce using rule 24
	">="           reduce using rule 24
	"&&"           reduce using rule 24
	"||"           reduce using rule 24
	%eof           reduce using rule 24


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 29
Number of terminals: 28
Number of non-terminals: 4
Number of states: 74
